# Generated by Django 2.0.2 on 2020-12-16 04:19

import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ActionCode',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('actionCode', models.CharField(blank=True, max_length=100, null=True, unique=True, verbose_name='کد اقدام')),
                ('actionDescription', models.CharField(blank=True, max_length=100, null=True, verbose_name='شرح اقدام')),
                ('actionIsActive', models.BooleanField(default=True, verbose_name='فعال')),
            ],
            options={
                'db_table': 'actioncode',
            },
        ),
        migrations.CreateModel(
            name='AdminSetting',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('settingTimestamp', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'adminsetting',
            },
        ),
        migrations.CreateModel(
            name='Asset',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('assetTypes', models.IntegerField(blank=True, choices=[(1, 'مکان'), (2, 'ماشین  آلات'), (3, 'ابزارآلات')], null=True, verbose_name='نوع دارایی')),
                ('assetName', models.CharField(max_length=100, verbose_name='مشخصات')),
                ('assetDescription', models.CharField(max_length=100, verbose_name='توضیحات')),
                ('assetCode', models.CharField(max_length=50, verbose_name='کد')),
                ('assetAddress', models.CharField(blank=True, max_length=100, null=True, verbose_name='آدرس')),
                ('assetCity', models.CharField(blank=True, max_length=50, null=True, verbose_name='شهر')),
                ('assetState', models.CharField(blank=True, max_length=50, null=True, verbose_name='استان')),
                ('assetZipcode', models.CharField(blank=True, max_length=50, null=True, verbose_name='کد پستی')),
                ('assetCountry', models.CharField(blank=True, max_length=100, null=True, verbose_name='کشور')),
                ('assetAccount', models.CharField(blank=True, max_length=100, null=True, verbose_name='حساب')),
                ('assetChargeDepartment', models.CharField(blank=True, max_length=100, null=True, verbose_name='دپارتمان مسوول')),
                ('assetNotes', models.CharField(blank=True, max_length=100, null=True, verbose_name='یادداشت')),
                ('assetBarcode', models.IntegerField(blank=True, null=True, verbose_name='بارکد')),
                ('assetHasPartOf', models.BooleanField(default=False)),
                ('assetAisel', models.IntegerField(blank=True, null=True, verbose_name='راهرو')),
                ('assetRow', models.IntegerField(blank=True, null=True, verbose_name='ردیف')),
                ('assetBin', models.IntegerField(blank=True, null=True, verbose_name='Bin')),
                ('assetManufacture', models.CharField(blank=True, max_length=50, null=True, verbose_name='سازنده')),
                ('assetModel', models.CharField(blank=True, max_length=50, null=True, verbose_name='مدل')),
                ('assetSerialNumber', models.CharField(blank=True, max_length=50, null=True, verbose_name='شماره سریال')),
                ('assetStatus', models.BooleanField(default=True, verbose_name='وضعیت')),
                ('assetIsStock', models.BooleanField(default=False, verbose_name='انبار')),
            ],
            options={
                'db_table': 'assets',
            },
        ),
        migrations.CreateModel(
            name='AssetCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='نام')),
                ('description', models.CharField(max_length=50, verbose_name='توضیحات')),
                ('isPartOf', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='cmms.AssetCategory', verbose_name='زیر مجموعه')),
            ],
            options={
                'db_table': 'assetcategory',
            },
        ),
        migrations.CreateModel(
            name='AssetEvent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('AssetEventAdditionalDescription', models.CharField(blank=True, max_length=50, null=True, verbose_name='توضیحات تکمیلی')),
                ('AssetEventDateSubmitted', models.DateField(auto_now_add=True, verbose_name='تاریخ ارسال')),
                ('AssetEventAssetId', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='cmms.Asset', verbose_name='دارایی')),
            ],
            options={
                'db_table': 'assetevent',
            },
        ),
        migrations.CreateModel(
            name='AssetFile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('assetFile', models.FileField(upload_to='documents/')),
                ('assetFiledateAdded', models.DateTimeField(auto_now_add=True)),
                ('assetFileAssetId', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='cmms.Asset')),
            ],
            options={
                'db_table': 'assetfile',
            },
        ),
        migrations.CreateModel(
            name='AssetLife',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('assetOfflineFrom', models.DateField(blank=True, default=datetime.datetime.now, null=True, verbose_name='تاریخ خاموشی')),
                ('assetOfflineFromTime', models.TimeField(blank=True, default=datetime.datetime.now, null=True, verbose_name='زمان خاموشی')),
                ('assetOfflineAdditionalInfo', models.TextField(blank=True, null=True, verbose_name='اطلاعات اضافی')),
                ('assetEventDescription', models.TextField(blank=True, null=True, verbose_name='شرح رویداد')),
                ('assetOnlineFrom', models.DateField(blank=True, default=datetime.datetime.now, null=True, verbose_name='تاریخ شروع')),
                ('assetOnlineFromTime', models.TimeField(blank=True, default=datetime.datetime.now, null=True, verbose_name='زمان شروع')),
                ('assetOnlineStatus', models.IntegerField(blank=True, choices=[(0, 'در حال تولید'), (1, 'آماده به کار')], null=True, verbose_name='وضعیت')),
                ('assetOnlineAdditionalInfo', models.TextField(blank=True, null=True, verbose_name='اطلاعات اضافی')),
                ('assetOnlineProducteHourAffected', models.IntegerField(blank=True, default=0, null=True, verbose_name='ساعت وقفه در تولید')),
                ('assetCheckEvent', models.BooleanField(default=False, verbose_name='ایجاد رویداد')),
            ],
            options={
                'db_table': 'assetlife',
            },
        ),
        migrations.CreateModel(
            name='AssetMeterReading',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('assetMeterMeterReading', models.FloatField(default=0.0, verbose_name='meter reading')),
                ('assetMeterMeterReadingUnit', models.IntegerField(blank=True, choices=[(1, 'Cycles (cycles)'), (2, 'Cycles (g)'), (3, 'Hours (h)'), (4, 'Kilometers (km)'), (5, 'Kilopascals (kPa)'), (6, 'Litres (l)'), (7, 'Meters (m)'), (8, 'Miles (mi)'), (9, 'Pounds per square inch (PSI)'), (10, 'ProductionHours (ph)'), (11, 'Revolutions (rev)')], null=True, verbose_name='واحد اندازه گیری')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('assetMeterLocation', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='cmms.Asset', verbose_name='دارایی')),
            ],
            options={
                'db_table': 'assetmeterreading',
            },
        ),
        migrations.CreateModel(
            name='AssetPart',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('assetPartQnty', models.IntegerField(blank=True, null=True, verbose_name='تعداد')),
                ('assetPartAssetid', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='cmms.Asset', verbose_name='نام دارایی')),
            ],
            options={
                'db_table': 'assetpart',
            },
        ),
        migrations.CreateModel(
            name='AssetTypeSetting',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('settingEqTimestamp', models.DateTimeField(auto_now_add=True)),
                ('settingEqAsset', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='cmms.AssetCategory')),
            ],
            options={
                'db_table': 'assettypesetting',
            },
        ),
        migrations.CreateModel(
            name='AssetUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('AssetUserAssetId', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='cmms.Asset', verbose_name='دارایی')),
            ],
            options={
                'db_table': 'assetuser',
            },
        ),
        migrations.CreateModel(
            name='Attendance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('datecreated', models.DateField(blank=True, default=datetime.datetime.now, null=True, verbose_name='تاریخ حضور')),
                ('attendanceTime', models.FloatField(default=8, verbose_name='زمان حضور')),
                ('Ezafekar', models.FloatField(default=8, verbose_name='اضافه کار')),
            ],
            options={
                'db_table': 'attendance',
            },
        ),
        migrations.CreateModel(
            name='BOM',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('qnty', models.IntegerField(blank=True, null=True, verbose_name='تعداد')),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cmms.Asset', verbose_name='مکان')),
            ],
            options={
                'db_table': 'bom',
            },
        ),
        migrations.CreateModel(
            name='BOMGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('BOMGroupName', models.CharField(max_length=50, verbose_name='نام گروه BOM')),
            ],
            options={
                'db_table': 'bomgroup',
            },
        ),
        migrations.CreateModel(
            name='BOMGroupAsset',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('BOMGroupAssetAsset', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='cmms.Asset', verbose_name='دارایی')),
                ('BOMGroupAssetBOMGroup', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='cmms.BOMGroup', verbose_name='گروه')),
            ],
            options={
                'db_table': 'bomgroupasset',
            },
        ),
        migrations.CreateModel(
            name='BOMGroupPart',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('BOMGroupPartQnty', models.IntegerField(blank=True, null=True, verbose_name='تعداد')),
                ('BOMGroupPartBOMGroup', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='cmms.BOMGroup', verbose_name='گروه')),
            ],
            options={
                'db_table': 'bomgrouppart',
            },
        ),
        migrations.CreateModel(
            name='Business',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='نام')),
                ('code', models.CharField(max_length=50, verbose_name='کد')),
                ('primaryContact', models.CharField(blank=True, max_length=100, null=True, verbose_name='مشخصات تماس')),
                ('phone', models.CharField(blank=True, max_length=50, null=True, verbose_name='تلفن')),
                ('phone2', models.CharField(blank=True, max_length=50, null=True, verbose_name='تلفن 2')),
                ('fax', models.CharField(blank=True, max_length=50, null=True, verbose_name='فکس')),
                ('webSite', models.CharField(blank=True, max_length=50, null=True, verbose_name='سایت')),
                ('primaryEmail', models.CharField(blank=True, max_length=50, null=True, verbose_name='ایمیل اصلی')),
                ('secondyEmail', models.CharField(blank=True, max_length=50, null=True, verbose_name='ایمیل 2')),
                ('primaryCurrency', models.CharField(blank=True, max_length=50, null=True, verbose_name='واحد پول')),
                ('notes', models.CharField(blank=True, max_length=100, null=True, verbose_name='یادداشت')),
                ('isSupplier', models.BooleanField(default=False, verbose_name='تامین کننده')),
                ('insManufacturer', models.BooleanField(default=False, verbose_name='سازننده')),
                ('isServiceProvider', models.BooleanField(default=False, verbose_name='سرویس پروایدر')),
                ('isOwner', models.BooleanField(default=False, verbose_name='مالک')),
                ('isCustomer', models.BooleanField(default=False, verbose_name='مشتری')),
                ('address', models.CharField(blank=True, max_length=100, null=True, verbose_name='آدرس')),
                ('city', models.CharField(blank=True, max_length=50, null=True, verbose_name='شهر')),
                ('state', models.CharField(blank=True, max_length=50, null=True, verbose_name='استان')),
                ('postalCode', models.CharField(blank=True, max_length=50, null=True, verbose_name='کد پستی')),
                ('country', models.CharField(blank=True, max_length=100, null=True, verbose_name='کشور')),
            ],
            options={
                'db_table': 'business',
            },
        ),
        migrations.CreateModel(
            name='BusinessAsset',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('businessAssetBusinessType', models.IntegerField(blank=True, choices=[(0, 'تامین کننده'), (1, 'سارننده'), (2, 'خدماتی'), (3, 'مالک'), (4, 'مشتری')], null=True, verbose_name='نوع کسب و کار')),
                ('businessAssetSupplierPartNumber', models.CharField(blank=True, max_length=100, null=True, verbose_name='پارت نامبر تامین کننده')),
                ('businessAssetCatalog', models.CharField(blank=True, max_length=100, null=True, verbose_name='دسته بندی')),
                ('businessAssetisDefault', models.BooleanField(default=False, verbose_name='تامین کننده مورد علاقه')),
                ('businessAssetVendorPrice', models.FloatField(blank=True, null=True, verbose_name='قیمت تامین کننده')),
                ('BusinessAssetAsset', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='cmms.Asset', verbose_name='نام دارایی')),
                ('businessAssetBusiness', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='cmms.Business', verbose_name='کسب و کار')),
            ],
            options={
                'db_table': 'businessasset',
            },
        ),
        migrations.CreateModel(
            name='BusinessFile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('businessFile', models.FileField(upload_to='documents/')),
                ('businessFiledateAdded', models.DateTimeField(auto_now_add=True)),
                ('businessFileBusinessId', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='cmms.Business')),
            ],
            options={
                'db_table': 'businessfiles',
            },
        ),
        migrations.CreateModel(
            name='BusinessPart',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('businessPartBusinessType', models.IntegerField(blank=True, choices=[(0, 'تامین کننده'), (1, 'سارننده'), (2, 'خدماتی'), (3, 'مالک'), (4, 'مشتری')], null=True, verbose_name='نوع کسب و کار')),
                ('businessPartSupplierPartNumber', models.CharField(blank=True, max_length=100, null=True, verbose_name='پارت نامبر تامین کننده')),
                ('businessPartCatalog', models.CharField(blank=True, max_length=100, null=True, verbose_name='دسته بندی')),
                ('businessPartisDefault', models.BooleanField(default=False, verbose_name='تامین کننده مورد علاقه')),
                ('businessPartVendorPrice', models.FloatField(blank=True, null=True, verbose_name='قیمت تامین کننده')),
            ],
            options={
                'db_table': 'businesspart',
            },
        ),
        migrations.CreateModel(
            name='BusinessUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'businessuser',
            },
        ),
        migrations.CreateModel(
            name='CauseCode',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('causeCode', models.CharField(blank=True, max_length=100, null=True, unique=True, verbose_name='کد علت')),
                ('causeDescription', models.CharField(blank=True, max_length=100, null=True, verbose_name='شرح علت')),
                ('causeIsActive', models.BooleanField(default=True, verbose_name='فعال')),
            ],
            options={
                'db_table': 'causecode',
            },
        ),
        migrations.CreateModel(
            name='EquipmentCostSetting',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('settingEqTimestamp', models.DateTimeField(auto_now_add=True)),
                ('settingEqAsset', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='cmms.Asset')),
            ],
            options={
                'db_table': 'equipmentcostSetting',
            },
        ),
        migrations.CreateModel(
            name='EquipSetting',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('EqSettingTimestamp', models.DateTimeField(auto_now_add=True)),
                ('EqSettingAsset', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='cmms.Asset')),
            ],
            options={
                'db_table': 'equipsetting',
            },
        ),
        migrations.CreateModel(
            name='Events',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Code', models.CharField(blank=True, max_length=50, null=True, verbose_name='کد رویداد')),
                ('name', models.CharField(blank=True, max_length=50, null=True, verbose_name='نام رویداد')),
                ('description', models.CharField(blank=True, max_length=50, null=True, verbose_name='توضیح')),
            ],
            options={
                'db_table': 'events',
            },
        ),
        migrations.CreateModel(
            name='MachineCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='نام')),
                ('description', models.CharField(max_length=50, verbose_name='توضیحات')),
                ('isPartOf', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='cmms.MachineCategory', verbose_name='زیر مجموعه')),
            ],
            options={
                'db_table': 'machinecategory',
            },
        ),
        migrations.CreateModel(
            name='MaintenanceType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='نام')),
                ('description', models.CharField(max_length=50, verbose_name='توضیحات')),
                ('color', models.CharField(default='#FF0000', max_length=10, verbose_name='رنگ')),
            ],
            options={
                'db_table': 'maintenancetype',
            },
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('msgPririty', models.IntegerField(blank=True, choices=[(1, 'خیلی زیاد'), (2, 'زیاد'), (3, 'متوسط'), (4, 'پایین'), (5, 'خیلی پایین')], null=True, verbose_name='پیامهای سیستمی')),
                ('messageStatus', models.IntegerField(choices=[(3, 'read'), (2, 'unread')], verbose_name='وضعیت')),
                ('sentTime', models.DateTimeField(auto_now_add=True)),
                ('subject', models.CharField(blank=True, max_length=200, null=True, verbose_name='موضوع')),
                ('Message', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'message',
            },
        ),
        migrations.CreateModel(
            name='MiniWorkOrder',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'miniworkorder',
            },
        ),
        migrations.CreateModel(
            name='MiscCost',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('miscCoastType', models.IntegerField(blank=True, choices=[(1, 'هزینه1'), (2, 'هزینه2'), (3, 'هزینه3'), (4, 'هزینه4')], null=True, verbose_name='نوع')),
                ('miscCoastdescription', models.CharField(blank=True, max_length=100, null=True, verbose_name='توضیحات')),
                ('estimatedQnty', models.FloatField(blank=True, default=0.0, null=True, verbose_name='مقدار تخمینی')),
                ('estimatedUnitCoast', models.FloatField(blank=True, default=0.0, null=True, verbose_name='هزینه تخمینی بازای واحد')),
                ('estimatedTotalCoast', models.FloatField(blank=True, default=0.0, null=True, verbose_name='هزینه تخمینی کلی')),
                ('qnty', models.FloatField(blank=True, default=0.0, null=True, verbose_name='مقدار واقعی')),
                ('actualUnitCoast', models.FloatField(blank=True, default=0.0, null=True, verbose_name='هزینه واحد')),
                ('actualTotlaCoast', models.FloatField(blank=True, default=0.0, null=True, verbose_name='هزینه کل')),
                ('timeStamp', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'misccoast',
            },
        ),
        migrations.CreateModel(
            name='OfflineStatus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Code', models.CharField(blank=True, max_length=50, null=True, verbose_name='کد رویداد')),
                ('name', models.CharField(blank=True, max_length=50, null=True, verbose_name='نام رویداد')),
                ('description', models.CharField(blank=True, max_length=50, null=True, verbose_name='توضیح')),
            ],
            options={
                'db_table': 'offlinestatus',
            },
        ),
        migrations.CreateModel(
            name='Part',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('partName', models.CharField(max_length=100, verbose_name='مشخصات')),
                ('partDescription', models.CharField(max_length=100, verbose_name='توضیحات')),
                ('partCode', models.CharField(max_length=50, verbose_name='کد')),
                ('partMake', models.CharField(blank=True, max_length=100, null=True, verbose_name='ساخته شده توسط')),
                ('partModel', models.CharField(blank=True, max_length=50, null=True, verbose_name='مدل')),
                ('partLastPrice', models.FloatField(blank=True, default=0, null=True, verbose_name='آخرین قیمت')),
                ('partAccount', models.CharField(blank=True, max_length=100, null=True, verbose_name='حساب')),
                ('partChargeDepartment', models.CharField(blank=True, max_length=100, null=True, verbose_name='دپارتمان مسوول')),
                ('partNotes', models.CharField(blank=True, max_length=100, null=True, verbose_name='یادداشت')),
                ('partBarcode', models.IntegerField(blank=True, null=True, verbose_name='بارکد')),
                ('partInventoryCode', models.CharField(blank=True, max_length=50, null=True, verbose_name='کد قفسه')),
            ],
            options={
                'db_table': 'parts',
            },
        ),
        migrations.CreateModel(
            name='PartFile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('partFile', models.FileField(upload_to='documents/')),
                ('partFiledateAdded', models.DateTimeField(auto_now_add=True)),
                ('partFilePartId', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='cmms.Part')),
            ],
            options={
                'db_table': 'partfile',
            },
        ),
        migrations.CreateModel(
            name='PartPurchase',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('purchaseDateOrdered', models.DateField(blank=True, default=datetime.datetime.now, null=True, verbose_name='تاریخ سفارش')),
                ('purchasePriceTotla', models.FloatField(blank=True, default=0.0, null=True, verbose_name='قیمت تمام شده')),
                ('purchaseCurrency', models.IntegerField(blank=True, choices=[(0, 'Us Dollar'), (1, 'Rial')], null=True, verbose_name='واحد پول')),
                ('purchaseDateRecieved', models.DateField(blank=True, null=True, verbose_name='تاریخ دریافت')),
                ('purchaseDateofExpire', models.DateField(blank=True, null=True, verbose_name='تاریخ انقضا')),
                ('purchaseQuantityReceived', models.FloatField(default=0.0, verbose_name='تعداد')),
                ('purchasePricePerUnit', models.FloatField(default=0.0, verbose_name='قیمت واحد')),
                ('purchasePartId', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='cmms.Part', verbose_name='قطعه')),
                ('purchaseStock', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='cmms.Asset', verbose_name='انبار قطعه')),
            ],
            options={
                'db_table': 'partpurchase',
            },
        ),
        migrations.CreateModel(
            name='PartUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('PartUserPartId', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='cmms.Part', verbose_name='قطعه')),
            ],
            options={
                'db_table': 'partuser',
            },
        ),
        migrations.CreateModel(
            name='PartWaranty',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('warantyType', models.IntegerField(blank=True, choices=[(1, 'ساده'), (2, 'قابل تمدید')], null=True, verbose_name='نوع گارانتی')),
                ('warantyUsageTermType', models.IntegerField(blank=True, choices=[(1, 'تاریخ'), (2, 'اندازه گیری'), (3, 'ساعت تولید')], null=True, verbose_name='شرایط استفاده از گارانتی')),
                ('warantyDataAdded', models.DateField(auto_now_add=True, verbose_name=' تاریخ  ثبت')),
                ('warantyExpirationDate', models.DateField(blank=True, default=datetime.datetime.now, verbose_name='تاریخ انقضا')),
                ('warantyQnty', models.IntegerField(blank=True, null=True, verbose_name='تعداد')),
                ('warantyMeterReadingValueLimit', models.IntegerField(blank=True, null=True, verbose_name='مقدار محدودکننده؟؟؟')),
                ('warantyMeterReadingUnit', models.IntegerField(blank=True, choices=[(1, 'Cycles (cycles)'), (2, 'Cycles (g)'), (3, 'Hours (h)'), (4, 'Kilometers (km)'), (5, 'Kilopascals (kPa)'), (6, 'Litres (l)'), (7, 'Meters (m)'), (8, 'Miles (mi)'), (9, 'Pounds per square inch (PSI)'), (10, 'ProductionHours (ph)'), (11, 'Revolutions (rev)')], null=True, verbose_name='واحد اندازه گیری')),
                ('warantyCertificationNumber', models.CharField(blank=True, max_length=100, null=True, verbose_name='شماره گواهی')),
                ('warantyDescription', models.CharField(blank=True, max_length=100, null=True, verbose_name='توضیحات')),
                ('warantyProvider', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='cmms.Business', verbose_name='تامین کننده')),
                ('warantyStockItem', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='cmms.Part', verbose_name='نام قطعه')),
            ],
            options={
                'db_table': 'partwaranty',
            },
        ),
        migrations.CreateModel(
            name='PertCode',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pertCode', models.CharField(blank=True, max_length=100, null=True, unique=True, verbose_name='کد پرت')),
                ('pertDescription', models.CharField(blank=True, max_length=100, null=True, verbose_name='شرح')),
            ],
            options={
                'db_table': 'pertcode',
            },
        ),
        migrations.CreateModel(
            name='ProblemCode',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('problemCode', models.CharField(blank=True, max_length=100, null=True, unique=True, verbose_name='کد مشکل')),
                ('problemDescription', models.CharField(blank=True, max_length=100, null=True, verbose_name='شرح مشکل')),
                ('problemIsActive', models.BooleanField(default=True, verbose_name='فعال')),
            ],
            options={
                'db_table': 'problemcode',
            },
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('projectName', models.CharField(max_length=100, verbose_name='نام')),
                ('projectDescription', models.TextField(verbose_name='شرح')),
                ('ProjectStartDate', models.DateField(default=datetime.datetime.now, verbose_name='تاریخ شروع پروژه')),
                ('ProjectEndDate', models.DateField(default=datetime.datetime.now, verbose_name='تاریخ پایان پروژه')),
                ('ProjectActualStartDate', models.DateField(default=datetime.datetime.now, verbose_name='تاریخ شروع واقعی پروژه')),
                ('ProjectActualEndDate', models.DateField(blank=True, default=datetime.datetime.now, null=True, verbose_name='تاریخ واقعی اتمام پروژه')),
            ],
            options={
                'db_table': 'project',
            },
        ),
        migrations.CreateModel(
            name='ProjectFile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('projectFile', models.FileField(upload_to='documents/')),
                ('projectFiledateAdded', models.DateTimeField(auto_now_add=True)),
                ('projectFileProjectId', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='cmms.Project')),
            ],
            options={
                'db_table': 'projectfile',
            },
        ),
        migrations.CreateModel(
            name='ProjectUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ProjectUserId', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='cmms.Project', verbose_name='دارایی')),
            ],
            options={
                'db_table': 'projectuser',
            },
        ),
        migrations.CreateModel(
            name='Purchase',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('purchaseDateOrdered', models.DateField(blank=True, default=datetime.datetime.now, null=True, verbose_name='تاریخ سفارش')),
                ('purchasePriceTotla', models.FloatField(blank=True, null=True, verbose_name='قیمت تمام شده')),
                ('purchaseCurrency', models.IntegerField(blank=True, choices=[(0, 'Us Dollar'), (1, 'Rial')], null=True, verbose_name='واحد پول')),
                ('purchaseDateRecieved', models.DateField(blank=True, null=True, verbose_name='تاریخ دریافت')),
                ('purchaseDateofExpire', models.DateField(blank=True, null=True, verbose_name='تاریخ انقضا')),
                ('purchaseAssetId', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='cmms.Asset', verbose_name='دارایی')),
            ],
            options={
                'db_table': 'purchase',
            },
        ),
        migrations.CreateModel(
            name='Report',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reportName', models.CharField(blank=True, max_length=100, null=True, verbose_name='نام گزارش')),
                ('reportCategory', models.IntegerField(blank=True, choices=[(1, 'دستور کار فعال'), (2, 'دستور کار غیر فعال'), (3, 'کنترل انبار'), (4, 'دارایی'), (5, 'کاربران'), (6, 'اندازه گیری کسب و کار'), (7, 'شخصی سازی شده'), (8, 'پیش بینی'), (9, 'نگهداری زمانبندی شده')], null=True, verbose_name='نوع گزارش')),
                ('reportClassName', models.CharField(blank=True, max_length=100, null=True, verbose_name='نام کلاس')),
                ('reportDetails', models.TextField(blank=True, null=True, verbose_name='شرح')),
                ('reportTemplate', models.CharField(blank=True, max_length=100, null=True, verbose_name='نام قالب')),
                ('reportFav', models.BooleanField(default=True, verbose_name='گزارش مورد علاقه')),
                ('timeStamp', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'reports',
            },
        ),
        migrations.CreateModel(
            name='Schedule',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('schChoices', models.IntegerField(choices=[(0, 'item 1'), (1, 'item 2'), (2, 'item 3')], default=0, null=True, verbose_name='اولویت')),
                ('schHowOften', models.IntegerField(choices=[(1, 'ساعتی'), (2, 'روزانه'), (3, 'هفتگی'), (4, 'ماهانه'), (5, 'سالانه')], default=1, null=True, verbose_name='تکرار')),
                ('schHourRep', models.IntegerField(blank=True, null=True, verbose_name='ساعت')),
                ('schHourIsFixed', models.BooleanField(choices=[(True, 'ثابت'), (False, 'شناور')], default=True, verbose_name='ثابت')),
                ('schDailyRep', models.IntegerField(blank=True, null=True, verbose_name='روز')),
                ('schDayIsFixed', models.BooleanField(choices=[(True, 'ثابت'), (False, 'شناور')], default=True, verbose_name='ثابت')),
                ('schWeeklyRep', models.IntegerField(blank=True, null=True, verbose_name='هفته')),
                ('isSunday', models.BooleanField(default=True, verbose_name='یکشنبه')),
                ('isMonday', models.BooleanField(default=True, verbose_name='دوشنبه')),
                ('isTuesday', models.BooleanField(default=True, verbose_name='سه شنبه')),
                ('isWednenday', models.BooleanField(default=True, verbose_name='چهارشنبه')),
                ('isThursday', models.BooleanField(default=True, verbose_name='پنجشنبه')),
                ('isFriday', models.BooleanField(default=True, verbose_name='جمعه')),
                ('isSaturday', models.BooleanField(default=True, verbose_name='شنبه')),
                ('schMonthlyRep', models.IntegerField(blank=True, null=True, verbose_name='ماه')),
                ('schDayofMonthlyRep', models.IntegerField(blank=True, null=True, verbose_name='روز')),
                ('schMonthIsFixed', models.BooleanField(choices=[(True, 'ثابت'), (False, 'شناور')], verbose_name='ثابت')),
                ('schYearlyRep', models.IntegerField(blank=True, null=True, verbose_name='ماه')),
                ('schMonthOfYearRep', models.IntegerField(blank=True, choices=[(1, 'فروردین'), (2, 'اردیبهشت'), (3, 'خرداد'), (4, 'تیر'), (5, 'مرداد'), (6, 'شهریور'), (7, 'مهر'), (8, 'آبان'), (9, 'آذر'), (10, 'دی'), (11, 'بهمن'), (12, 'اسفند')], null=True, verbose_name='ماه')),
                ('schDayOfMonthOfYearRep', models.IntegerField(blank=True, null=True, verbose_name='روز')),
                ('schYearIsFixed', models.BooleanField(choices=[(True, 'ثابت'), (False, 'شناور')], default=True, verbose_name='ثابت')),
                ('shStartDate', models.DateField(blank=True, null=True, verbose_name='تاریخ شروع')),
                ('shEndDate', models.DateField(blank=True, null=True, verbose_name='تاریخ شروع')),
                ('shHasEndDate', models.BooleanField(verbose_name='تاریخ انقضا')),
                ('shMeterReadingEvreyQnty', models.FloatField(blank=True, default=0, null=True, verbose_name='هر')),
                ('shMeterReadingMetrics', models.IntegerField(blank=True, choices=[(1, 'Cycles (cycles)'), (2, 'Cycles (g)'), (3, 'Hours (h)'), (4, 'Kilometers (km)'), (5, 'Kilopascals (kPa)'), (6, 'Litres (l)'), (7, 'Meters (m)'), (8, 'Miles (mi)'), (9, 'Pounds per square inch (PSI)'), (10, 'ProductionHours (ph)'), (11, 'Revolutions (rev)')], null=True, verbose_name='واحد اندازه گیری')),
                ('shMeterReadingStartAt', models.FloatField(blank=True, null=True, verbose_name='مقدار شروع')),
                ('shMeterReadingEndBy', models.FloatField(blank=True, null=True, verbose_name='مقذار نهایی')),
                ('schMeterReadingIsFixed', models.BooleanField(choices=[(True, 'ثابت'), (False, 'شناور')], default=True, verbose_name='ثابت')),
                ('schHasEndReading', models.BooleanField(default=False, verbose_name='مقدار پایانی')),
                ('shMeterReadingHasTiming', models.BooleanField(default=True)),
                ('shMeterReadingWhenQnty', models.FloatField(blank=True, null=True, verbose_name='زمان')),
                ('shMeterReadingWhenMetric', models.IntegerField(blank=True, choices=[(1, 'Cycles (cycles)'), (2, 'Cycles (g)'), (3, 'Hours (h)'), (4, 'Kilometers (km)'), (5, 'Kilopascals (kPa)'), (6, 'Litres (l)'), (7, 'Meters (m)'), (8, 'Miles (mi)'), (9, 'Pounds per square inch (PSI)'), (10, 'ProductionHours (ph)'), (11, 'Revolutions (rev)')], null=True)),
                ('shMetricComparison', models.IntegerField(blank=True, choices=[(0, 'بزرگتر از'), (1, 'کوچکتر از')], null=True)),
                ('schnextTime', models.DateTimeField(blank=True, null=True)),
                ('schTimestamp', models.DateTimeField(auto_now_add=True)),
                ('shMeterNextVal', models.FloatField(blank=True, null=True, verbose_name='مقدار بعدی')),
                ('schAsset', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='schAsset', to='cmms.Asset')),
                ('schEvent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='cmms.Events')),
            ],
            options={
                'db_table': 'schedule',
            },
        ),
        migrations.CreateModel(
            name='Stock',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('qtyOnHand', models.IntegerField(blank=True, null=True, verbose_name='موجودی')),
                ('minQty', models.IntegerField(blank=True, null=True, verbose_name='حداقل موجودی')),
                ('aisle', models.IntegerField(blank=True, null=True, verbose_name='راهرو')),
                ('row', models.IntegerField(blank=True, null=True, verbose_name='ردیف')),
                ('bin', models.IntegerField(blank=True, null=True, verbose_name='قفسه')),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cmms.Asset', verbose_name='مکان')),
                ('stockItem', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cmms.Part', verbose_name='نام قطعه')),
            ],
            options={
                'db_table': 'stocks',
            },
        ),
        migrations.CreateModel(
            name='StopCode',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stopCode', models.CharField(blank=True, max_length=100, null=True, unique=True, verbose_name='کد توقف')),
                ('stopDescription', models.CharField(blank=True, max_length=100, null=True, verbose_name='شرح توقف')),
            ],
            options={
                'db_table': 'stopcode',
            },
        ),
        migrations.CreateModel(
            name='SysUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=20)),
                ('fullName', models.CharField(max_length=50, verbose_name='مشخصات کامل')),
                ('personalCode', models.CharField(max_length=50, verbose_name='کد پرسنلی')),
                ('title', models.CharField(blank=True, max_length=50, null=True, verbose_name='عنوان')),
                ('email', models.EmailField(blank=True, max_length=70, null=True, unique=True, verbose_name='ایمیل')),
                ('tel1', models.CharField(blank=True, max_length=50, null=True, verbose_name='تلفن')),
                ('tel2', models.CharField(blank=True, max_length=50, null=True, verbose_name='تلفن 2')),
                ('addr1', models.CharField(blank=True, max_length=50, null=True, verbose_name='آدرس')),
                ('addr2', models.CharField(blank=True, max_length=50, null=True, verbose_name='آدرس 2')),
                ('city', models.CharField(blank=True, max_length=50, null=True, verbose_name='شهر')),
                ('state', models.CharField(blank=True, max_length=50, null=True, verbose_name='استان')),
                ('country', models.CharField(blank=True, max_length=50, null=True, verbose_name='کشور')),
                ('postalCode', models.CharField(blank=True, max_length=50, null=True, verbose_name='کدپستی')),
                ('hourlyRate', models.FloatField(blank=True, default=0, null=True, verbose_name='نرخ دستمزد ساعتی')),
                ('defaultLoginLocation', models.FloatField(blank=True, choices=[(1, 'داشبورد'), (2, 'درخواستهای انتسابی به من'), (3, 'صندوق ورودی پیامها'), (4, 'درخواست')], null=True, verbose_name='صفحه پیش فرض')),
                ('profileImage', models.ImageField(blank=True, default=None, upload_to='images/')),
                ('userStatus', models.BooleanField(default=True, verbose_name='وضعیت')),
                ('userId', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'sysusers',
            },
        ),
        migrations.CreateModel(
            name='TaskGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('taskGroupName', models.CharField(blank=True, max_length=50, null=True, verbose_name='نام گروه')),
            ],
            options={
                'db_table': 'taskgroup',
            },
        ),
        migrations.CreateModel(
            name='TaskGroupAssetCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('includeSubCategory', models.BooleanField(default=True, verbose_name='شامل زیر مجموعه دسته بندی ها')),
                ('TaskGroup', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='cmms.TaskGroup')),
                ('assetCategory', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='cmms.AssetCategory', verbose_name='دسته دارایی')),
            ],
            options={
                'db_table': 'taskgroupassetcategory',
            },
        ),
        migrations.CreateModel(
            name='TaskGroupFile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('taskGroupFile', models.FileField(upload_to='documents/')),
                ('taskGroupFiledateAdded', models.DateTimeField(auto_now_add=True)),
                ('taskGroupFileTaskGroup', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='cmms.TaskGroup')),
            ],
            options={
                'db_table': 'taskgroupfile',
            },
        ),
        migrations.CreateModel(
            name='Tasks',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('taskTypes', models.IntegerField(blank=True, choices=[(1, 'عمومی'), (2, 'متنی'), (3, 'متریک')], null=True, verbose_name='انتخاب نوع فعالیت')),
                ('taskMetrics', models.IntegerField(blank=True, choices=[(1, 'Cycles (cycles)'), (2, 'Cycles (g)'), (3, 'Hours (h)'), (4, 'Kilometers (km)'), (5, 'Kilopascals (kPa)'), (6, 'Litres (l)'), (7, 'Meters (m)'), (8, 'Miles (mi)'), (9, 'Pounds per square inch (PSI)'), (10, 'ProductionHours (ph)'), (11, 'Revolutions (rev)')], null=True, verbose_name='')),
                ('taskDescription', models.CharField(blank=True, max_length=100, null=True, verbose_name='توضیحات')),
                ('taskResult', models.CharField(blank=True, max_length=50, null=True, verbose_name='توضیحات')),
                ('taskStartDate', models.DateField(blank=True, null=True, verbose_name=' تاریخ شروع')),
                ('taskStartTime', models.TimeField(blank=True, default=datetime.datetime.now, null=True, verbose_name='زمان شروع')),
                ('taskTimeEstimate', models.FloatField(blank=True, null=True, verbose_name='زمان تقریبی( به ساعت)')),
                ('taskDateCompleted', models.DateField(blank=True, default=datetime.datetime.now, null=True, verbose_name='تاریخ تکمیل')),
                ('taskTimeCompleted', models.TimeField(blank=True, default=datetime.datetime.now, null=True, verbose_name='زمان پایان')),
                ('taskTimeSpent', models.FloatField(blank=True, null=True, verbose_name='زمان صرف شده')),
                ('taskCompletionNote', models.CharField(blank=True, max_length=100, null=True, verbose_name='یادداشت تکمیلی')),
                ('taskAssignedToUser', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='assignedToUserTask', to='cmms.SysUser', verbose_name='اختصاص به کاربر')),
                ('taskCompletedByUser', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='CompleteUserTask', to='cmms.SysUser', verbose_name='کاربر تکمیل کننده')),
            ],
            options={
                'db_table': 'tasks',
            },
        ),
        migrations.CreateModel(
            name='TaskTemplate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('taskTemplateTypes', models.IntegerField(blank=True, choices=[(1, 'عمومی'), (2, 'متنی'), (3, 'متریک')], null=True, verbose_name='انتخاب نوع فعالیت')),
                ('taskTemplateMetrics', models.IntegerField(blank=True, choices=[(1, 'Cycles (cycles)'), (2, 'Cycles (g)'), (3, 'Hours (h)'), (4, 'Kilometers (km)'), (5, 'Kilopascals (kPa)'), (6, 'Litres (l)'), (7, 'Meters (m)'), (8, 'Miles (mi)'), (9, 'Pounds per square inch (PSI)'), (10, 'ProductionHours (ph)'), (11, 'Revolutions (rev)')], null=True, verbose_name='')),
                ('taskTemplateDescription', models.CharField(max_length=100, verbose_name='توضیحات')),
                ('taskTemplateTimeEstimate', models.FloatField(blank=True, null=True, verbose_name='زمان تقریبی( به ساعت)')),
                ('taskTemplateTaskGroup', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='taskgroup', to='cmms.TaskGroup', verbose_name='متعلق به')),
            ],
            options={
                'db_table': 'tasktemplate',
            },
        ),
        migrations.CreateModel(
            name='testuser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('massage', models.CharField(max_length=50, verbose_name='مشخصات کامل')),
            ],
            options={
                'db_table': 'testuser',
            },
        ),
        migrations.CreateModel(
            name='UserCertification',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('userCertificationName', models.CharField(max_length=50, verbose_name='عنوان')),
                ('userCertificationType', models.IntegerField(blank=True, choices=[(1, 'نوع مدرک 1'), (2, 'نوع مدرک 2'), (3, 'نوع مدرک 3')], null=True, verbose_name='نوع مدرک')),
                ('userCertificationDesc', models.TextField(blank=True, null=True, verbose_name='توضیجات')),
                ('userCertificationStart', models.DateField(blank=True, null=True, verbose_name='تاریخ اعتبار از')),
                ('userCertificationEnd', models.DateField(blank=True, null=True, verbose_name='تاریخ اعتبار از')),
                ('userCertificationUser', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='cmms.SysUser')),
            ],
            options={
                'db_table': 'usercertification',
            },
        ),
        migrations.CreateModel(
            name='UserFile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('userFile', models.FileField(upload_to='documents/')),
                ('userFiledateAdded', models.DateTimeField(auto_now_add=True)),
                ('userFileUser', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='cmms.SysUser')),
            ],
            options={
                'db_table': 'userfile',
            },
        ),
        migrations.CreateModel(
            name='UserGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('userGroupCode', models.CharField(max_length=50, verbose_name='کد')),
                ('userGroupName', models.CharField(max_length=50, verbose_name='نام')),
                ('userGroupZarib', models.FloatField(blank=True, null=True, verbose_name='ضریب حضور')),
                ('userGroupZaribTamir', models.FloatField(blank=True, null=True, verbose_name='ضریب تعمیر')),
                ('userGroupZaribService', models.FloatField(blank=True, null=True, verbose_name='ضریب سرویس')),
                ('userGroupZaribProject', models.FloatField(blank=True, null=True, verbose_name='ضریب پروژه')),
                ('userGroupIsPartOF', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='cmms.UserGroup', verbose_name='زیرمجموعه')),
                ('userUserLocation', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='cmms.Asset', verbose_name='واحد')),
            ],
            options={
                'db_table': 'usergroup',
            },
        ),
        migrations.CreateModel(
            name='UserGroupMaintenanceZarib',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('zaribUGMZ', models.FloatField(blank=True, null=True, verbose_name='ضریب پروژه')),
                ('groupUGMZ', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cmms.UserGroup')),
                ('maintenanceTypeUGMZ', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cmms.MaintenanceType', verbose_name='نوع نگهداری')),
            ],
            options={
                'db_table': 'usergroupmaintenancezarib',
            },
        ),
        migrations.CreateModel(
            name='UserGroups',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('groupUserGroups', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='cmms.UserGroup')),
                ('userUserGroups', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='cmms.SysUser')),
            ],
            options={
                'db_table': 'usergroups',
            },
        ),
        migrations.CreateModel(
            name='Waranty',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('warantyType', models.IntegerField(blank=True, choices=[(1, 'ساده'), (2, 'قابل تمدید')], null=True, verbose_name='نوع گارانتی')),
                ('warantyUsageTermType', models.IntegerField(blank=True, choices=[(1, 'تاریخ'), (2, 'اندازه گیری'), (3, 'ساعت تولید')], null=True, verbose_name='شرایط استفاده از گارانتی')),
                ('warantyDataAdded', models.DateField(auto_now_add=True, verbose_name=' تاریخ  ثبت')),
                ('warantyExpirationDate', models.DateField(blank=True, default=datetime.datetime.now, verbose_name='تاریخ انقضا')),
                ('warantyQnty', models.IntegerField(blank=True, null=True, verbose_name='تعداد')),
                ('warantyMeterReadingValueLimit', models.IntegerField(blank=True, null=True, verbose_name='مقدار محدودکننده؟؟؟')),
                ('warantyMeterReadingUnit', models.IntegerField(blank=True, choices=[(1, 'Cycles (cycles)'), (2, 'Cycles (g)'), (3, 'Hours (h)'), (4, 'Kilometers (km)'), (5, 'Kilopascals (kPa)'), (6, 'Litres (l)'), (7, 'Meters (m)'), (8, 'Miles (mi)'), (9, 'Pounds per square inch (PSI)'), (10, 'ProductionHours (ph)'), (11, 'Revolutions (rev)')], null=True, verbose_name='واحد اندازه گیری')),
                ('warantyCertificationNumber', models.CharField(blank=True, max_length=100, null=True, verbose_name='شماره گواهی')),
                ('warantyDescription', models.CharField(blank=True, max_length=100, null=True, verbose_name='توضیحات')),
                ('warantyLocation', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='cmms.Asset', verbose_name='مکان')),
                ('warantyProvider', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='cmms.Business', verbose_name='تامین کننده')),
            ],
            options={
                'db_table': 'waranty',
            },
        ),
        migrations.CreateModel(
            name='WorkOrder',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('woStatus', models.IntegerField(blank=True, choices=[(1, 'درخواست شده'), (2, 'متوقف'), (4, 'تخصیص داده شده'), (5, 'باز'), (6, 'در حال پیشرفت'), (7, 'بسته شده کامل'), (8, 'بسته شده، ناقص'), (9, 'در انتظار قطعه')], null=True, verbose_name='وضعیت درخواست')),
                ('woPriority', models.IntegerField(blank=True, choices=[(1, 'خیلی زیاد'), (2, 'زیاد'), (3, 'متوسط'), (4, 'پایین'), (5, 'خیلی پایین')], null=True, verbose_name='اولویت')),
                ('requiredCompletionDate', models.DateField(blank=True, default=datetime.datetime.now, verbose_name=' تاریخ اتمام مورد نیاز')),
                ('requiredCompletionTime', models.TimeField(blank=True, default=datetime.datetime.now, verbose_name='زمان')),
                ('summaryofIssue', models.CharField(blank=True, max_length=100, null=True, verbose_name='خلاصه مشکل')),
                ('workInstructions', models.CharField(blank=True, max_length=50, null=True, verbose_name='دستورالعمل')),
                ('estimatedLabor', models.FloatField(blank=True, null=True, verbose_name='ساعت کار مورد نیاز (تخمینی)')),
                ('actualLabor', models.FloatField(blank=True, null=True, verbose_name='ساعت کار واقعی')),
                ('datecreated', models.DateField(blank=True, default=datetime.datetime.now, null=True, verbose_name='تاریخ ایجاد')),
                ('timecreated', models.TimeField(blank=True, default=datetime.datetime.now, null=True, verbose_name='زمان ایجاد')),
                ('dateCompleted', models.DateField(blank=True, null=True, verbose_name=' تاریخ تکمیل(تخمینی)')),
                ('timeCompleted', models.TimeField(blank=True, default=datetime.datetime.now, verbose_name='زمان تکمیل(تخمین')),
                ('account', models.CharField(blank=True, max_length=50, null=True, verbose_name='حساب')),
                ('chargeDepartment', models.CharField(blank=True, max_length=50, null=True, verbose_name='دپارتمان مسوول')),
                ('completionNotes', models.CharField(blank=True, max_length=50, null=True, verbose_name='اطلاعات تکمیلی')),
                ('problemBrief', models.CharField(blank=True, max_length=50, null=True, verbose_name='مشکل (خلاصه)')),
                ('rootCause', models.CharField(blank=True, max_length=50, null=True, verbose_name='علت اصلی')),
                ('solution', models.CharField(blank=True, max_length=50, null=True, verbose_name='راه حل')),
                ('adminNote', models.CharField(blank=True, max_length=50, null=True, verbose_name='توضیحات مدیر')),
                ('allTriggerFire', models.BooleanField(default=True, verbose_name='تمامی محرک ها')),
                ('isScheduling', models.BooleanField(default=False)),
                ('isEM', models.BooleanField(default=False)),
                ('estimatedCompilation', models.IntegerField(blank=True, default=1, null=True, verbose_name='زمان تخمینی تکمیل(روز)')),
                ('creatNewWO', models.BooleanField(default=False, verbose_name='ایجاد درخواست جدید در صورت بسته نشدن درخوسات قبلی')),
                ('running', models.BooleanField(default=False, verbose_name='در حال اجرا')),
                ('timeStamp', models.DateTimeField(auto_now_add=True)),
                ('visibile', models.BooleanField(default=True)),
                ('isUpdating', models.BooleanField(default=False)),
                ('isPm', models.BooleanField(default=False)),
                ('woTags', models.TextField(blank=True, null=True)),
                ('Project', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='cmms.Project', verbose_name='پروژه')),
                ('RequestedUser', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='RequestedUser', to='cmms.SysUser', verbose_name='درخواست کننده')),
                ('assignedToUser', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='assignedToUser', to='cmms.SysUser', verbose_name='اختصاص به کاربر')),
                ('completedByUser', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='completedByUser', to='cmms.SysUser', verbose_name='تکمیل درخواست توسط کاربر')),
                ('isPartOf', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='cmms.WorkOrder', verbose_name='زیر مجموعه')),
                ('maintenanceType', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='cmms.MaintenanceType', verbose_name='نوع نگهداری')),
                ('woActionCode', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='woActionCode', to='cmms.ActionCode', verbose_name='کد اقدام')),
                ('woAsset', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='cmms.Asset', verbose_name='دارایی')),
                ('woCauseCode', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='woCauseCode', to='cmms.CauseCode', verbose_name='کد علت')),
                ('woProblemCode', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='woProblemCode', to='cmms.ProblemCode', verbose_name='کد مشکل')),
                ('woStopCode', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='woStopCode', to='cmms.StopCode', verbose_name='کد توقف')),
            ],
            options={
                'db_table': 'workorder',
            },
        ),
        migrations.CreateModel(
            name='WorkorderFile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('woFile', models.FileField(upload_to='documents/')),
                ('woFiledateAdded', models.DateTimeField(auto_now_add=True)),
                ('woFileworkorder', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='cmms.WorkOrder')),
            ],
            options={
                'db_table': 'workorderfile',
            },
        ),
        migrations.CreateModel(
            name='WorkorderMeterReading',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('woMeterReadingMeterReading', models.FloatField(default=0.0, verbose_name='meter reading')),
                ('woMeterReadingMeterReadingUnit', models.IntegerField(blank=True, choices=[(1, 'Cycles (cycles)'), (2, 'Cycles (g)'), (3, 'Hours (h)'), (4, 'Kilometers (km)'), (5, 'Kilopascals (kPa)'), (6, 'Litres (l)'), (7, 'Meters (m)'), (8, 'Miles (mi)'), (9, 'Pounds per square inch (PSI)'), (10, 'ProductionHours (ph)'), (11, 'Revolutions (rev)')], null=True, verbose_name='واحد اندازه گیری')),
                ('timestamp', models.DateField(blank=True, default=datetime.datetime.now)),
                ('woMeterReadingLocation', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='cmms.Asset', verbose_name='دارایی')),
                ('woMeterReadingworkorder', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='cmms.WorkOrder', verbose_name='سفارش کار')),
            ],
            options={
                'db_table': 'workordermeterreading',
            },
        ),
        migrations.CreateModel(
            name='WorkorderPart',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('woPartPlannedQnty', models.FloatField(blank=True, default=0.0, null=True, verbose_name='کمیت پیشنهادی')),
                ('woPartActulaQnty', models.FloatField(blank=True, default=0.0, null=True, verbose_name='کمیت واقعی')),
                ('timeStamp', models.DateTimeField(auto_now_add=True)),
                ('woPartStock', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='cmms.Stock', verbose_name='انبار')),
                ('woPartWorkorder', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='cmms.WorkOrder', verbose_name='سفارش کار')),
            ],
            options={
                'db_table': 'workorderpart',
            },
        ),
        migrations.CreateModel(
            name='WorkorderPert',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('wpPertTime', models.FloatField(default=0, null=True, verbose_name='مقدار پرت (دقیقه)')),
                ('woPertPert', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='cmms.PertCode', verbose_name='کد پرت')),
                ('woPertWorkorder', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='cmms.WorkOrder', verbose_name='دستور کار')),
            ],
            options={
                'db_table': 'workorderpert',
            },
        ),
        migrations.CreateModel(
            name='WorkorderTask',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('task', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='worordertaskrelated', to='cmms.Tasks')),
                ('workorder', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='worordertaskwordrelated', to='cmms.WorkOrder')),
            ],
            options={
                'db_table': 'workordertask',
            },
        ),
        migrations.CreateModel(
            name='WorkorderUserNotification',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('woNotifOnAssignment', models.BooleanField(default=True, verbose_name='پیام رسانی هنگام ایجاد درخواست')),
                ('woNotifOnStatusChange', models.BooleanField(default=False, verbose_name='پیام رسانی هنگام تغییر')),
                ('woNotifOnCompletion', models.BooleanField(default=False, verbose_name='پیام رسانی هنگام تکمیل')),
                ('woNotifOnTaskCompleted', models.BooleanField(default=False, verbose_name='پیام رسانی هنگام تکمیل وظیفه')),
                ('woNotifOnOnlineOffline', models.BooleanField(default=False, verbose_name='پیام رسانی هنگام آنلاین آفلاین شدن')),
                ('woNotifUser', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cmms.SysUser', verbose_name='کاربر')),
                ('woNotifWorkorder', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cmms.WorkOrder')),
            ],
            options={
                'db_table': 'workorderusernotification',
            },
        ),
        migrations.AddField(
            model_name='tasks',
            name='workOrder',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='CompleteUserTask', to='cmms.WorkOrder'),
        ),
        migrations.AddField(
            model_name='schedule',
            name='schNextWo',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='schnextWo', to='cmms.WorkOrder'),
        ),
        migrations.AddField(
            model_name='schedule',
            name='workOrder',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='cmms.WorkOrder'),
        ),
        migrations.AddField(
            model_name='purchase',
            name='purchaseUser',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='cmms.SysUser', verbose_name='کاربر درخواست کننده'),
        ),
        migrations.AddField(
            model_name='purchase',
            name='purchasedFrom',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='cmms.Business', verbose_name='خرید از'),
        ),
        migrations.AddField(
            model_name='projectuser',
            name='ProjectUserUserId',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='cmms.SysUser', verbose_name='کاربر '),
        ),
        migrations.AddField(
            model_name='partuser',
            name='PartUserUserId',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='cmms.SysUser', verbose_name='کاربر '),
        ),
        migrations.AddField(
            model_name='partpurchase',
            name='purchaseUser',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='cmms.SysUser', verbose_name='کاربر درخواست کننده'),
        ),
        migrations.AddField(
            model_name='partpurchase',
            name='purchasedFrom',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='cmms.Business', verbose_name='خرید از'),
        ),
        migrations.AddField(
            model_name='misccost',
            name='miscCoastWorkorder',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cmms.WorkOrder'),
        ),
        migrations.AddField(
            model_name='message',
            name='fromUser',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='fromuser', to='cmms.SysUser', verbose_name='از:'),
        ),
        migrations.AddField(
            model_name='message',
            name='toUser',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='touser', to='cmms.SysUser', verbose_name='به:'),
        ),
        migrations.AddField(
            model_name='businessuser',
            name='business',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='cmms.SysUser', verbose_name='پرسنل'),
        ),
        migrations.AddField(
            model_name='businessuser',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='cmms.Part', verbose_name='نام قطعه'),
        ),
        migrations.AddField(
            model_name='businesspart',
            name='BusinessPartPart',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='cmms.Part', verbose_name='نام قطعه'),
        ),
        migrations.AddField(
            model_name='businesspart',
            name='businessPartBusiness',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='cmms.Business', verbose_name='تامین کننده'),
        ),
        migrations.AddField(
            model_name='bomgrouppart',
            name='BOMGroupPartPart',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='cmms.Part', verbose_name='قطعه'),
        ),
        migrations.AddField(
            model_name='bom',
            name='stockItem',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cmms.Part', verbose_name='نام قطعه'),
        ),
        migrations.AddField(
            model_name='attendance',
            name='name',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='cmms.SysUser', verbose_name='نام کاربر'),
        ),
        migrations.AddField(
            model_name='assetuser',
            name='AssetUserUserId',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='cmms.SysUser', verbose_name='کاربر '),
        ),
        migrations.AddField(
            model_name='assetpart',
            name='assetPartBOMGroupName',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='cmms.BOMGroup', verbose_name='گروه'),
        ),
        migrations.AddField(
            model_name='assetpart',
            name='assetPartPid',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='cmms.Part', verbose_name='نام قطعه'),
        ),
        migrations.AddField(
            model_name='assetmeterreading',
            name='assetWorkorderMeterReading',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='cmms.WorkOrder', verbose_name='درخواست'),
        ),
        migrations.AddField(
            model_name='assetlife',
            name='assetEventType',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='cmms.Events', verbose_name='نوع رویداد'),
        ),
        migrations.AddField(
            model_name='assetlife',
            name='assetLifeAssetid',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='cmms.Asset', verbose_name='نام دارایی'),
        ),
        migrations.AddField(
            model_name='assetlife',
            name='assetOfflineStatus',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='cmms.OfflineStatus', verbose_name='علت خرابی'),
        ),
        migrations.AddField(
            model_name='assetlife',
            name='assetSetOfflineByUser',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='offlineUser', to='cmms.SysUser', verbose_name='کاربر'),
        ),
        migrations.AddField(
            model_name='assetlife',
            name='assetSetOnlineByUser',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='onlineUser', to='cmms.SysUser', verbose_name='کاربر'),
        ),
        migrations.AddField(
            model_name='assetlife',
            name='assetStopCode',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='assetStopCode', to='cmms.StopCode', verbose_name='کد توقف'),
        ),
        migrations.AddField(
            model_name='assetlife',
            name='assetWOAssoc',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='cmms.WorkOrder', verbose_name='درخواست مرتبط'),
        ),
        migrations.AddField(
            model_name='assetevent',
            name='AssetEventEventId',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='cmms.Events', verbose_name='نوع رویداد'),
        ),
        migrations.AddField(
            model_name='asset',
            name='assetCategory',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='cmms.AssetCategory', verbose_name='دسته بندی'),
        ),
        migrations.AddField(
            model_name='asset',
            name='assetIsLocatedAt',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='location', to='cmms.Asset', verbose_name='مکان'),
        ),
        migrations.AddField(
            model_name='asset',
            name='assetIsPartOf',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='cmms.Asset', verbose_name='زیر مجموعه'),
        ),
        migrations.AddField(
            model_name='asset',
            name='assetMachineCategory',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='cmms.MachineCategory', verbose_name='نوع دستگاه'),
        ),
        migrations.AddField(
            model_name='adminsetting',
            name='settingAsset',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='cmms.Asset'),
        ),
        migrations.AlterUniqueTogether(
            name='workorderpert',
            unique_together={('woPertWorkorder', 'woPertPert')},
        ),
        migrations.AlterUniqueTogether(
            name='workorderpart',
            unique_together={('woPartWorkorder', 'woPartStock')},
        ),
        migrations.AlterUniqueTogether(
            name='usergroupmaintenancezarib',
            unique_together={('groupUGMZ', 'maintenanceTypeUGMZ')},
        ),
        migrations.AlterUniqueTogether(
            name='stock',
            unique_together={('stockItem', 'location')},
        ),
        migrations.AlterUniqueTogether(
            name='bomgrouppart',
            unique_together={('BOMGroupPartPart', 'BOMGroupPartBOMGroup')},
        ),
        migrations.AlterUniqueTogether(
            name='bomgroupasset',
            unique_together={('BOMGroupAssetAsset', 'BOMGroupAssetBOMGroup')},
        ),
        migrations.AlterUniqueTogether(
            name='attendance',
            unique_together={('name', 'datecreated')},
        ),
    ]
